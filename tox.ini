# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# To use a PEP 517 build-backend you are required to configure tox to use an isolated_build:
# https://tox.readthedocs.io/en/latest/example/package.html
isolated_build = True
skipsdist = True

envlist =
    # always keep coverage-clean first
    coverage-clean
    lint
    flake8
    mypy
    docstr-coverage
    py

[testenv]
whitelist_externals =
    poetry
commands =
    poetry run pytest
description = Run unit tests with pytest. This is a special environment that does not get a name, and
              can be referenced with "py".

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:lint]
deps =
    black
    isort
skip_install = true
commands =
    black src/ tests/
    isort src/ tests/
description = Run linters.

[testenv:doclint]
deps =
    rstfmt
skip_install = true
commands =
    rstfmt docs/source/
description = Run documentation linters.

[testenv:flake8]
skip_install = true
deps =
    darglint
    flake8<5.0.0
    flake8-black
    flake8-bandit
    flake8-bugbear
    flake8-colors
    flake8-docstrings
    flake8-isort
    flake8-print
    pydocstyle
commands =
    flake8 src/ tests/
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming).

#########################
# Flake8 Configuration  #
# (.flake8)             #
#########################
[flake8]
ignore =
    DAR101 # Missing parameter(s) in Docstring: - with_git_hash
    DAR201 # Missing "Returns" in Docstring: - return
    DAR301 # Missing "Yields" in Docstring: - yield
    E111 # indentation is not a multiple of 4
    T201 # print found.
    E203
    W503
    C901 # needs code change so ignoring for now.
    E731 # needs code change so ignoring for now.
    S101 # asserts are fine
    S106 # flags false positives with test_table_filler
    N801 # mixed case is bad but there's a lot of auto-generated code
    N815 # same ^
    S404 # Consider possible security implications associated with the subprocess module.
    S108 # Probable insecure usage of temp file/directory.
    S307 # Use of possibly insecure function - consider using safer ast.literal_eval.
    S603 # subprocess call - check for execution of untrusted input.
    S607 # Starting a process with a partial executable path ["open" in both cases]
    S608 # Possible SQL injection vector through string-based query construction.
    B024 # StreamingWriter is an abstract base class, but it has no abstract methods.
         # Remember to use @abstractmethod, @abstractclassmethod and/or @abstractproperty decorators.

[testenv:mypy]
deps = mypy
skip_install = true
commands = mypy --install-types --non-interactive --ignore-missing-imports src/
description = Run the mypy tool to check static typing on the project.

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage src/ tests/ --skip-private --skip-magic
description = Run the docstr-coverage tool to check documentation coverage
